package fecanalysis

import (
	"errors"
	"fmt"
)

// GoogleRandomMaskFactory creates random masks using Google's predefined patterns
type GoogleRandomMaskFactory struct{}

// CreateMask creates a random mask with the specified N and K parameters
func (f *GoogleRandomMaskFactory) CreateMask(N, K int) (Mask, error) {
	pattern, err := f.getRandomPattern(N, K)
	if err != nil {
		return nil, err
	}

	return &bitMask{
		data: pattern,
		n:    N,
		k:    K,
	}, nil
}

// getRandomPattern returns the predefined random pattern for given N and K
func (f *GoogleRandomMaskFactory) getRandomPattern(N, K int) ([]byte, error) {
	switch N {
	case 1:
		switch K {
		case 1:
			return maskRandom1_1, nil
		}
	case 2:
		switch K {
		case 1:
			return maskRandom2_1, nil
		case 2:
			return maskRandom2_2, nil
		}
	case 3:
		switch K {
		case 1:
			return maskRandom3_1, nil
		case 2:
			return maskRandom3_2, nil
		case 3:
			return maskRandom3_3, nil
		}
	case 4:
		switch K {
		case 1:
			return maskRandom4_1, nil
		case 2:
			return maskRandom4_2, nil
		case 3:
			return maskRandom4_3, nil
		case 4:
			return maskRandom4_4, nil
		}
	case 5:
		switch K {
		case 1:
			return maskRandom5_1, nil
		case 2:
			return maskRandom5_2, nil
		case 3:
			return maskRandom5_3, nil
		case 4:
			return maskRandom5_4, nil
		case 5:
			return maskRandom5_5, nil
		}
	case 6:
		switch K {
		case 1:
			return maskRandom6_1, nil
		case 2:
			return maskRandom6_2, nil
		case 3:
			return maskRandom6_3, nil
		case 4:
			return maskRandom6_4, nil
		case 5:
			return maskRandom6_5, nil
		case 6:
			return maskRandom6_6, nil
		}
	case 7:
		switch K {
		case 1:
			return maskRandom7_1, nil
		case 2:
			return maskRandom7_2, nil
		case 3:
			return maskRandom7_3, nil
		case 4:
			return maskRandom7_4, nil
		case 5:
			return maskRandom7_5, nil
		case 6:
			return maskRandom7_6, nil
		case 7:
			return maskRandom7_7, nil
		}
	case 8:
		switch K {
		case 1:
			return maskRandom8_1, nil
		case 2:
			return maskRandom8_2, nil
		case 3:
			return maskRandom8_3, nil
		case 4:
			return maskRandom8_4, nil
		case 5:
			return maskRandom8_5, nil
		case 6:
			return maskRandom8_6, nil
		case 7:
			return maskRandom8_7, nil
		case 8:
			return maskRandom8_8, nil
		}
	case 9:
		switch K {
		case 1:
			return maskRandom9_1, nil
		case 2:
			return maskRandom9_2, nil
		case 3:
			return maskRandom9_3, nil
		case 4:
			return maskRandom9_4, nil
		case 5:
			return maskRandom9_5, nil
		case 6:
			return maskRandom9_6, nil
		case 7:
			return maskRandom9_7, nil
		case 8:
			return maskRandom9_8, nil
		case 9:
			return maskRandom9_9, nil
		}
	case 10:
		switch K {
		case 1:
			return maskRandom10_1, nil
		case 2:
			return maskRandom10_2, nil
		case 3:
			return maskRandom10_3, nil
		case 4:
			return maskRandom10_4, nil
		case 5:
			return maskRandom10_5, nil
		case 6:
			return maskRandom10_6, nil
		case 7:
			return maskRandom10_7, nil
		case 8:
			return maskRandom10_8, nil
		case 9:
			return maskRandom10_9, nil
		case 10:
			return maskRandom10_10, nil
		}
	case 11:
		switch K {
		case 1:
			return maskRandom11_1, nil
		case 2:
			return maskRandom11_2, nil
		case 3:
			return maskRandom11_3, nil
		case 4:
			return maskRandom11_4, nil
		case 5:
			return maskRandom11_5, nil
		case 6:
			return maskRandom11_6, nil
		case 7:
			return maskRandom11_7, nil
		case 8:
			return maskRandom11_8, nil
		case 9:
			return maskRandom11_9, nil
		case 10:
			return maskRandom11_10, nil
		case 11:
			return maskRandom11_11, nil
		}
	case 12:
		switch K {
		case 1:
			return maskRandom12_1, nil
		case 2:
			return maskRandom12_2, nil
		case 3:
			return maskRandom12_3, nil
		case 4:
			return maskRandom12_4, nil
		case 5:
			return maskRandom12_5, nil
		case 6:
			return maskRandom12_6, nil
		case 7:
			return maskRandom12_7, nil
		case 8:
			return maskRandom12_8, nil
		case 9:
			return maskRandom12_9, nil
		case 10:
			return maskRandom12_10, nil
		case 11:
			return maskRandom12_11, nil
		case 12:
			return maskRandom12_12, nil
		}
	}

	return nil, errors.New(fmt.Sprintf("no random mask pattern available for N=%d, K=%d", N, K))
}

var (
	maskRandom1_1 = []byte{0x80, 0x00}

	maskRandom2_1 = []byte{0xc0, 0x00}
	maskRandom2_2 = []byte{0xc0, 0x00, 0x80, 0x00}

	maskRandom3_1 = []byte{0xe0, 0x00}
	maskRandom3_2 = []byte{0xc0, 0x00, 0xa0, 0x00}
	maskRandom3_3 = []byte{0xc0, 0x00, 0xa0, 0x00, 0x60, 0x00}

	maskRandom4_1 = []byte{0xf0, 0x00}
	maskRandom4_2 = []byte{0xc0, 0x00, 0xb0, 0x00}
	maskRandom4_3 = []byte{0xc0, 0x00, 0xb0, 0x00, 0x60, 0x00}
	maskRandom4_4 = []byte{0xc0, 0x00, 0xa0, 0x00, 0x30, 0x00, 0x50, 0x00}

	maskRandom5_1 = []byte{0xf8, 0x00}
	maskRandom5_2 = []byte{0xa8, 0x00, 0xd0, 0x00}
	maskRandom5_3 = []byte{0xb0, 0x00, 0xc8, 0x00, 0x50, 0x00}
	maskRandom5_4 = []byte{0xc8, 0x00, 0xb0, 0x00, 0x50, 0x00, 0x28, 0x00}
	maskRandom5_5 = []byte{0xc0, 0x00, 0x30, 0x00, 0x18, 0x00, 0xa0, 0x00, 0x48, 0x00}

	maskRandom6_1 = []byte{0xfc, 0x00}
	maskRandom6_2 = []byte{0xa8, 0x00, 0xd4, 0x00}
	maskRandom6_3 = []byte{0xd0, 0x00, 0x68, 0x00, 0xa4, 0x00}
	maskRandom6_4 = []byte{0xa8, 0x00, 0x58, 0x00, 0x64, 0x00, 0x94, 0x00}
	maskRandom6_5 = []byte{0xa8, 0x00, 0x84, 0x00, 0x64, 0x00, 0x90, 0x00, 0x58, 0x00}
	maskRandom6_6 = []byte{0x98, 0x00, 0x64, 0x00, 0x50, 0x00, 0x14, 0x00, 0xa8, 0x00, 0xe0, 0x00}

	maskRandom7_1 = []byte{0xfe, 0x00}
	maskRandom7_2 = []byte{0xd4, 0x00, 0xaa, 0x00}
	maskRandom7_3 = []byte{0xd0, 0x00, 0xaa, 0x00, 0x64, 0x00}
	maskRandom7_4 = []byte{0xd0, 0x00, 0xaa, 0x00, 0x64, 0x00, 0x1c, 0x00}
	maskRandom7_5 = []byte{0x0c, 0x00, 0xb0, 0x00, 0x1a, 0x00, 0xc4, 0x00, 0x62, 0x00}
	maskRandom7_6 = []byte{0x8c, 0x00, 0x4a, 0x00, 0x64, 0x00, 0xd0, 0x00, 0xa0, 0x00, 0x32, 0x00}
	maskRandom7_7 = []byte{0x4a, 0x00, 0x94, 0x00, 0x1a, 0x00, 0xc4, 0x00, 0x28, 0x00, 0xc2, 0x00, 0x34, 0x00}

	maskRandom8_1 = []byte{0xff, 0x00}
	maskRandom8_2 = []byte{0xaa, 0x00, 0xd5, 0x00}
	maskRandom8_3 = []byte{0xc5, 0x00, 0x92, 0x00, 0x6a, 0x00}
	maskRandom8_4 = []byte{0x45, 0x00, 0xb4, 0x00, 0x6a, 0x00, 0x89, 0x00}
	maskRandom8_5 = []byte{0x8c, 0x00, 0x92, 0x00, 0x2b, 0x00, 0x51, 0x00, 0x64, 0x00}
	maskRandom8_6 = []byte{0xa1, 0x00, 0x52, 0x00, 0x91, 0x00, 0x2a, 0x00, 0xc4, 0x00, 0x4c, 0x00}
	maskRandom8_7 = []byte{0x15, 0x00, 0xc2, 0x00, 0x25, 0x00, 0x62, 0x00, 0x58, 0x00, 0x8c, 0x00, 0xa3, 0x00}
	maskRandom8_8 = []byte{0x25, 0x00, 0x8a, 0x00, 0x91, 0x00, 0x68, 0x00, 0x32, 0x00, 0x43, 0x00, 0xc4, 0x00, 0x1c, 0x00}

	maskRandom9_1 = []byte{0xff, 0x80}
	maskRandom9_2 = []byte{0xaa, 0x80, 0xd5, 0x00}
	maskRandom9_3 = []byte{0xa5, 0x00, 0xc8, 0x00, 0x52, 0x80}
	maskRandom9_4 = []byte{0xa2, 0x00, 0xc9, 0x00, 0x52, 0x80, 0x24, 0x80}
	maskRandom9_5 = []byte{0x8c, 0x00, 0x25, 0x00, 0x92, 0x80, 0x41, 0x80, 0x58, 0x00}
	maskRandom9_6 = []byte{0x84, 0x80, 0x27, 0x00, 0x51, 0x80, 0x1a, 0x00, 0x68, 0x00, 0x89, 0x00}
	maskRandom9_7 = []byte{0x8c, 0x00, 0x47, 0x00, 0x81, 0x80, 0x12, 0x80, 0x58, 0x00, 0x28, 0x80, 0xb4, 0x00}
	maskRandom9_8 = []byte{0x2c, 0x00, 0x91, 0x00, 0x40, 0x80, 0x06, 0x80, 0xc8, 0x00, 0x45, 0x00, 0x30, 0x80, 0xa2, 0x00}
	maskRandom9_9 = []byte{0x4c, 0x00, 0x62, 0x00, 0x91, 0x00, 0x42, 0x80, 0xa4, 0x00, 0x13, 0x00, 0x30, 0x80, 0x88, 0x80, 0x09, 0x00}

	maskRandom10_1  = []byte{0xff, 0xc0}
	maskRandom10_2  = []byte{0xaa, 0x80, 0xd5, 0x40}
	maskRandom10_3  = []byte{0xa4, 0x40, 0xc9, 0x00, 0x52, 0x80}
	maskRandom10_4  = []byte{0xca, 0x00, 0x32, 0x80, 0xa1, 0x40, 0x55, 0x00}
	maskRandom10_5  = []byte{0xca, 0x00, 0x32, 0x80, 0xa1, 0x40, 0x55, 0x00, 0x08, 0xc0}
	maskRandom10_6  = []byte{0x0e, 0x00, 0x33, 0x00, 0x10, 0xc0, 0x45, 0x40, 0x88, 0x80, 0xe0, 0x00}
	maskRandom10_7  = []byte{0x46, 0x00, 0x33, 0x00, 0x80, 0xc0, 0x0c, 0x40, 0x28, 0x80, 0x94, 0x00, 0xc1, 0x00}
	maskRandom10_8  = []byte{0x2c, 0x00, 0x81, 0x80, 0xa0, 0x40, 0x05, 0x40, 0x18, 0x80, 0xc2, 0x00, 0x22, 0x80, 0x50, 0x40}
	maskRandom10_9  = []byte{0x4c, 0x00, 0x23, 0x00, 0x88, 0xc0, 0x21, 0x40, 0x52, 0x80, 0x94, 0x00, 0x26, 0x00, 0x48, 0x40, 0x91, 0x80}
	maskRandom10_10 = []byte{0x4c, 0x00, 0x51, 0x00, 0xa0, 0x40, 0x04, 0xc0, 0x03, 0x80, 0x86, 0x00, 0x29, 0x00, 0x42, 0x40, 0x98, 0x00, 0x30, 0x80}

	maskRandom11_1  = []byte{0xff, 0xe0}
	maskRandom11_2  = []byte{0xec, 0xc0, 0x9b, 0xa0}
	maskRandom11_3  = []byte{0xca, 0xc0, 0xf1, 0x40, 0xb6, 0x20}
	maskRandom11_4  = []byte{0xc4, 0xc0, 0x31, 0x60, 0x4b, 0x20, 0x2c, 0xa0}
	maskRandom11_5  = []byte{0x86, 0x80, 0x23, 0x20, 0x16, 0x20, 0x4c, 0x20, 0x41, 0xc0}
	maskRandom11_6  = []byte{0x64, 0x40, 0x51, 0x40, 0x0c, 0xa0, 0xa1, 0x20, 0x12, 0xa0, 0x8a, 0x40}
	maskRandom11_7  = []byte{0x46, 0x40, 0x33, 0x20, 0x91, 0x80, 0xa4, 0x20, 0x50, 0xa0, 0x84, 0xc0, 0x09, 0x60}
	maskRandom11_8  = []byte{0x0c, 0x80, 0x80, 0x60, 0xa0, 0x80, 0x05, 0x40, 0x43, 0x00, 0x1a, 0x00, 0x60, 0x20, 0x14, 0x20}
	maskRandom11_9  = []byte{0x46, 0x40, 0x62, 0x60, 0x8c, 0x00, 0x01, 0x60, 0x07, 0x80, 0xa0, 0x80, 0x18, 0xa0, 0x91, 0x00, 0x78, 0x00}
	maskRandom11_10 = []byte{0x64, 0x40, 0x51, 0x40, 0xa9, 0x00, 0x04, 0xc0, 0xd0, 0x00, 0x82, 0x40, 0x21, 0x20, 0x0c, 0x20, 0x4a, 0x00, 0x12, 0xa0}
	maskRandom11_11 = []byte{0x46, 0x40, 0x33, 0x20, 0x99, 0x00, 0x05, 0x80, 0x80, 0xa0, 0x84, 0x40, 0x40, 0x60, 0x0a, 0x80, 0x68, 0x00, 0x10, 0x20, 0x30, 0x40}

	maskRandom12_1  = []byte{0xff, 0xf0}
	maskRandom12_2  = []byte{0xec, 0xc0, 0x93, 0xb0}
	maskRandom12_3  = []byte{0x9b, 0x80, 0x4f, 0x10, 0x3c, 0x60}
	maskRandom12_4  = []byte{0x8b, 0x20, 0x14, 0xb0, 0x22, 0xd0, 0x45, 0x50}
	maskRandom12_5  = []byte{0x53, 0x60, 0x64, 0x20, 0x0c, 0xc0, 0x82, 0xa0, 0x09, 0x30}
	maskRandom12_6  = []byte{0x51, 0x40, 0xc5, 0x10, 0x21, 0x80, 0x12, 0x30, 0x08, 0xe0, 0x2e, 0x00}
	maskRandom12_7  = []byte{0x53, 0x60, 0x21, 0x30, 0x90, 0x90, 0x02, 0x50, 0x06, 0xa0, 0x2c, 0x00, 0x88, 0x60}
	maskRandom12_8  = []byte{0x20, 0x60, 0x80, 0x30, 0x42, 0x40, 0x01, 0x90, 0x14, 0x10, 0x0a, 0x80, 0x38, 0x00, 0xc5, 0x00}
	maskRandom12_9  = []byte{0x53, 0x60, 0xe4, 0x20, 0x24, 0x40, 0xa1, 0x10, 0x18, 0x30, 0x03, 0x90, 0x8a, 0x10, 0x04, 0x90, 0x00, 0xe0}
	maskRandom12_10 = []byte{0x51, 0x40, 0x45, 0x10, 0x80, 0xd0, 0x24, 0x20, 0x0a, 0x20, 0x00, 0xe0, 0xb8, 0x00, 0x09, 0x10, 0x56, 0x00, 0xa2, 0x80}
	maskRandom12_11 = []byte{0x53, 0x60, 0x21, 0x30, 0x10, 0x90, 0x00, 0x70, 0x0c, 0x10, 0x40, 0xc0, 0x6a, 0x00, 0x86, 0x00, 0x24, 0x80, 0x89, 0x00, 0xc0, 0x20}
	maskRandom12_12 = []byte{0x10, 0x60, 0x02, 0x30, 0x40, 0x50, 0x21, 0x80, 0x81, 0x10, 0x14, 0x80, 0x98, 0x00, 0x08, 0x90, 0x62, 0x00, 0x24, 0x20, 0x8a, 0x00, 0x84, 0x40}
)
