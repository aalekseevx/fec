package fecanalysis

import (
	"errors"
	"fmt"
)

// GoogleBurstyMaskFactory creates bursty masks using Google's predefined patterns
type GoogleBurstyMaskFactory struct{}

// CreateMask creates a bursty mask with the specified N and K parameters
func (f *GoogleBurstyMaskFactory) CreateMask(N, K int) (Mask, error) {
	pattern, err := f.getBurstyPattern(N, K)
	if err != nil {
		return nil, err
	}

	return &bitMask{
		data: pattern,
		n:    N,
		k:    K,
	}, nil
}

// getBurstyPattern returns the predefined bursty pattern for given N and K
func (f *GoogleBurstyMaskFactory) getBurstyPattern(N, K int) ([]byte, error) {
	switch N {
	case 1:
		switch K {
		case 1:
			return maskBursty1_1, nil
		}
	case 2:
		switch K {
		case 1:
			return maskBursty2_1, nil
		case 2:
			return maskBursty2_2, nil
		}
	case 3:
		switch K {
		case 1:
			return maskBursty3_1, nil
		case 2:
			return maskBursty3_2, nil
		case 3:
			return maskBursty3_3, nil
		}
	case 4:
		switch K {
		case 1:
			return maskBursty4_1, nil
		case 2:
			return maskBursty4_2, nil
		case 3:
			return maskBursty4_3, nil
		case 4:
			return maskBursty4_4, nil
		}
	case 5:
		switch K {
		case 1:
			return maskBursty5_1, nil
		case 2:
			return maskBursty5_2, nil
		case 3:
			return maskBursty5_3, nil
		case 4:
			return maskBursty5_4, nil
		case 5:
			return maskBursty5_5, nil
		}
	case 6:
		switch K {
		case 1:
			return maskBursty6_1, nil
		case 2:
			return maskBursty6_2, nil
		case 3:
			return maskBursty6_3, nil
		case 4:
			return maskBursty6_4, nil
		case 5:
			return maskBursty6_5, nil
		case 6:
			return maskBursty6_6, nil
		}
	case 7:
		switch K {
		case 1:
			return maskBursty7_1, nil
		case 2:
			return maskBursty7_2, nil
		case 3:
			return maskBursty7_3, nil
		case 4:
			return maskBursty7_4, nil
		case 5:
			return maskBursty7_5, nil
		case 6:
			return maskBursty7_6, nil
		case 7:
			return maskBursty7_7, nil
		}
	case 8:
		switch K {
		case 1:
			return maskBursty8_1, nil
		case 2:
			return maskBursty8_2, nil
		case 3:
			return maskBursty8_3, nil
		case 4:
			return maskBursty8_4, nil
		case 5:
			return maskBursty8_5, nil
		case 6:
			return maskBursty8_6, nil
		case 7:
			return maskBursty8_7, nil
		case 8:
			return maskBursty8_8, nil
		}
	case 9:
		switch K {
		case 1:
			return maskBursty9_1, nil
		case 2:
			return maskBursty9_2, nil
		case 3:
			return maskBursty9_3, nil
		case 4:
			return maskBursty9_4, nil
		case 5:
			return maskBursty9_5, nil
		case 6:
			return maskBursty9_6, nil
		case 7:
			return maskBursty9_7, nil
		case 8:
			return maskBursty9_8, nil
		case 9:
			return maskBursty9_9, nil
		}
	case 10:
		switch K {
		case 1:
			return maskBursty10_1, nil
		case 2:
			return maskBursty10_2, nil
		case 3:
			return maskBursty10_3, nil
		case 4:
			return maskBursty10_4, nil
		case 5:
			return maskBursty10_5, nil
		case 6:
			return maskBursty10_6, nil
		case 7:
			return maskBursty10_7, nil
		case 8:
			return maskBursty10_8, nil
		case 9:
			return maskBursty10_9, nil
		case 10:
			return maskBursty10_10, nil
		}
	case 11:
		switch K {
		case 1:
			return maskBursty11_1, nil
		case 2:
			return maskBursty11_2, nil
		case 3:
			return maskBursty11_3, nil
		case 4:
			return maskBursty11_4, nil
		case 5:
			return maskBursty11_5, nil
		case 6:
			return maskBursty11_6, nil
		case 7:
			return maskBursty11_7, nil
		case 8:
			return maskBursty11_8, nil
		case 9:
			return maskBursty11_9, nil
		case 10:
			return maskBursty11_10, nil
		case 11:
			return maskBursty11_11, nil
		}
	case 12:
		switch K {
		case 1:
			return maskBursty12_1, nil
		case 2:
			return maskBursty12_2, nil
		case 3:
			return maskBursty12_3, nil
		case 4:
			return maskBursty12_4, nil
		case 5:
			return maskBursty12_5, nil
		case 6:
			return maskBursty12_6, nil
		case 7:
			return maskBursty12_7, nil
		case 8:
			return maskBursty12_8, nil
		case 9:
			return maskBursty12_9, nil
		case 10:
			return maskBursty12_10, nil
		case 11:
			return maskBursty12_11, nil
		case 12:
			return maskBursty12_12, nil
		}
	}

	return nil, errors.New(fmt.Sprintf("no bursty mask pattern available for N=%d, K=%d", N, K))
}

var (
	maskBursty1_1 = []byte{0x80, 0x00}

	maskBursty2_1 = []byte{0xc0, 0x00}
	maskBursty2_2 = []byte{0x80, 0x00, 0xc0, 0x00}

	maskBursty3_1 = []byte{0xe0, 0x00}
	maskBursty3_2 = []byte{0xc0, 0x00, 0xa0, 0x00}
	maskBursty3_3 = []byte{0x80, 0x00, 0xc0, 0x00, 0x60, 0x00}

	maskBursty4_1 = []byte{0xf0, 0x00}
	maskBursty4_2 = []byte{0xa0, 0x00, 0xd0, 0x00}
	maskBursty4_3 = []byte{0xc0, 0x00, 0x60, 0x00, 0x90, 0x00}
	maskBursty4_4 = []byte{0x80, 0x00, 0xc0, 0x00, 0x60, 0x00, 0x30, 0x00}

	maskBursty5_1 = []byte{0xf8, 0x00}
	maskBursty5_2 = []byte{0xd0, 0x00, 0xa8, 0x00}
	maskBursty5_3 = []byte{0x70, 0x00, 0x90, 0x00, 0xc8, 0x00}
	maskBursty5_4 = []byte{0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x88, 0x00}
	maskBursty5_5 = []byte{0x80, 0x00, 0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00}

	maskBursty6_1 = []byte{0xfc, 0x00}
	maskBursty6_2 = []byte{0xa8, 0x00, 0xd4, 0x00}
	maskBursty6_3 = []byte{0x94, 0x00, 0xc8, 0x00, 0x64, 0x00}
	maskBursty6_4 = []byte{0x60, 0x00, 0x38, 0x00, 0x88, 0x00, 0xc4, 0x00}
	maskBursty6_5 = []byte{0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x84, 0x00}
	maskBursty6_6 = []byte{0x80, 0x00, 0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00}

	maskBursty7_1 = []byte{0xfe, 0x00}
	maskBursty7_2 = []byte{0xd4, 0x00, 0xaa, 0x00}
	maskBursty7_3 = []byte{0xc8, 0x00, 0x74, 0x00, 0x92, 0x00}
	maskBursty7_4 = []byte{0x38, 0x00, 0x8a, 0x00, 0xc4, 0x00, 0x62, 0x00}
	maskBursty7_5 = []byte{0x60, 0x00, 0x30, 0x00, 0x1c, 0x00, 0x84, 0x00, 0xc2, 0x00}
	maskBursty7_6 = []byte{0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x82, 0x00}
	maskBursty7_7 = []byte{0x80, 0x00, 0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00}

	maskBursty8_1 = []byte{0xff, 0x00}
	maskBursty8_2 = []byte{0xaa, 0x00, 0xd5, 0x00}
	maskBursty8_3 = []byte{0x74, 0x00, 0x92, 0x00, 0xc9, 0x00}
	maskBursty8_4 = []byte{0x8a, 0x00, 0xc5, 0x00, 0x62, 0x00, 0x31, 0x00}
	maskBursty8_5 = []byte{0x30, 0x00, 0x1c, 0x00, 0x85, 0x00, 0xc2, 0x00, 0x61, 0x00}
	maskBursty8_6 = []byte{0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0e, 0x00, 0x82, 0x00, 0xc1, 0x00}
	maskBursty8_7 = []byte{0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x81, 0x00}
	maskBursty8_8 = []byte{0x80, 0x00, 0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x00}

	maskBursty9_1 = []byte{0xff, 0x80}
	maskBursty9_2 = []byte{0xd5, 0x00, 0xaa, 0x80}
	maskBursty9_3 = []byte{0x92, 0x00, 0xc9, 0x00, 0x74, 0x80}
	maskBursty9_4 = []byte{0xc5, 0x00, 0x62, 0x00, 0x39, 0x00, 0x8a, 0x80}
	maskBursty9_5 = []byte{0x1c, 0x00, 0x85, 0x00, 0xc2, 0x80, 0x61, 0x00, 0x30, 0x80}
	maskBursty9_6 = []byte{0x30, 0x00, 0x18, 0x00, 0x0e, 0x00, 0x82, 0x80, 0xc1, 0x00, 0x60, 0x80}
	maskBursty9_7 = []byte{0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x81, 0x00, 0xc0, 0x80}
	maskBursty9_8 = []byte{0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x00, 0x80, 0x80}
	maskBursty9_9 = []byte{0x80, 0x00, 0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x00, 0x01, 0x80}

	maskBursty10_1  = []byte{0xff, 0xc0}
	maskBursty10_2  = []byte{0xaa, 0x80, 0xd5, 0x40}
	maskBursty10_3  = []byte{0xc9, 0x00, 0x74, 0x80, 0x92, 0x40}
	maskBursty10_4  = []byte{0x62, 0x00, 0x39, 0x00, 0x8a, 0x80, 0xc5, 0x40}
	maskBursty10_5  = []byte{0x85, 0x00, 0xc2, 0x80, 0x61, 0x40, 0x30, 0x80, 0x18, 0x40}
	maskBursty10_6  = []byte{0x18, 0x00, 0x0e, 0x00, 0x82, 0x80, 0xc1, 0x40, 0x60, 0x80, 0x30, 0x40}
	maskBursty10_7  = []byte{0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x81, 0x40, 0xc0, 0x80, 0x60, 0x40}
	maskBursty10_8  = []byte{0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x00, 0x80, 0x80, 0xc0, 0x40}
	maskBursty10_9  = []byte{0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x00, 0x01, 0x80, 0x80, 0x40}
	maskBursty10_10 = []byte{0x80, 0x00, 0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x00, 0x01, 0x80, 0x00, 0xc0}

	maskBursty11_1  = []byte{0xff, 0xe0}
	maskBursty11_2  = []byte{0xd5, 0x40, 0xaa, 0xa0}
	maskBursty11_3  = []byte{0x74, 0x80, 0x92, 0x40, 0xc9, 0x20}
	maskBursty11_4  = []byte{0x39, 0x00, 0x8a, 0x80, 0xc5, 0x40, 0x62, 0x20}
	maskBursty11_5  = []byte{0xc2, 0xc0, 0x61, 0x00, 0x30, 0xa0, 0x1c, 0x40, 0x85, 0x20}
	maskBursty11_6  = []byte{0x0e, 0x00, 0x82, 0x80, 0xc1, 0x40, 0x60, 0xa0, 0x30, 0x40, 0x18, 0x20}
	maskBursty11_7  = []byte{0x18, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x81, 0x40, 0xc0, 0xa0, 0x60, 0x40, 0x30, 0x20}
	maskBursty11_8  = []byte{0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x40, 0x80, 0xa0, 0xc0, 0x40, 0x60, 0x20}
	maskBursty11_9  = []byte{0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x00, 0x01, 0x80, 0x80, 0x40, 0xc0, 0x20}
	maskBursty11_10 = []byte{0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x00, 0x01, 0x80, 0x00, 0xc0, 0x80, 0x20}
	maskBursty11_11 = []byte{0x80, 0x00, 0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x00, 0x01, 0x80, 0x00, 0xc0, 0x00, 0x60}

	maskBursty12_1  = []byte{0xff, 0xf0}
	maskBursty12_2  = []byte{0xaa, 0xa0, 0xd5, 0x50}
	maskBursty12_3  = []byte{0x92, 0x40, 0xc9, 0x20, 0x74, 0x90}
	maskBursty12_4  = []byte{0x8a, 0x80, 0xc5, 0x40, 0x62, 0x20, 0x39, 0x10}
	maskBursty12_5  = []byte{0x61, 0x00, 0x30, 0xa0, 0x1c, 0x50, 0x85, 0x20, 0xc2, 0x90}
	maskBursty12_6  = []byte{0x82, 0x90, 0xc1, 0x40, 0x60, 0xa0, 0x30, 0x50, 0x18, 0x20, 0x0c, 0x10}
	maskBursty12_7  = []byte{0x0c, 0x00, 0x07, 0x00, 0x81, 0x40, 0xc0, 0xa0, 0x60, 0x50, 0x30, 0x20, 0x18, 0x10}
	maskBursty12_8  = []byte{0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x00, 0x80, 0xa0, 0xc0, 0x50, 0x60, 0x20, 0x30, 0x10}
	maskBursty12_9  = []byte{0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x00, 0x01, 0x80, 0x80, 0x50, 0xc0, 0x20, 0x60, 0x10}
	maskBursty12_10 = []byte{0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x00, 0x01, 0x80, 0x00, 0xc0, 0x80, 0x20, 0xc0, 0x10}
	maskBursty12_11 = []byte{0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x00, 0x01, 0x80, 0x00, 0xc0, 0x00, 0x60, 0x80, 0x10}
	maskBursty12_12 = []byte{0x80, 0x00, 0xc0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x03, 0x00, 0x01, 0x80, 0x00, 0xc0, 0x00, 0x60, 0x00, 0x30}
)
